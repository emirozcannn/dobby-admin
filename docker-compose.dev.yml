version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: dobby_database_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: dobby_cafe
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d dobby_cafe"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dobby_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: dobby_redis_dev
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data_dev:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dobby_network

  # Database migrations (run once)
  migrate:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dobby_migrate
    environment:
      NODE_ENV: development
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: dobby_cafe
      DB_USER: postgres
      DB_PASSWORD: postgres
    command: ["npm", "run", "migrate"]
    depends_on:
      database:
        condition: service_healthy
    networks:
      - dobby_network
    restart: "no"

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local

networks:
  dobby_network:
    driver: bridge
